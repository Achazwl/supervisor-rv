#!/usr/bin/expect

set timeout 5
spawn term/term.py -t 127.0.0.1:6666 -c

expect "running in 64bit" {} timeout {exit 1}

expect ">>"
send "R\n"

# Test assembler
expect ">>"
send "A\n"
send "80100000\n"
expect "one instruction per line"
expect "]"
send "addi x2, x0, 1\n"
expect "]"
send "add x3, x2, x2\n"
expect "]"
send "jr ra\n"
expect "]"
send "nop\n"
expect "]"
send "\n"

expect ">>"
send "D\n"
send "80100000\n"
send "16\n"
expect -re "0x80100000: +0x00100113" {} timeout {exit 1}

expect ">>"
send "U\n"
send "80100000\n"
send "16\n"

expect ">>"
send "G\n"
send "80100000\n"
expect "elapsed time" {} timeout {exit 1}

expect ">>"
send "R\n"
expect -re "R3.+00000002"  {} timeout {exit 1}

# Test Assembler Label
expect ">>"
send "A\n"
send "80100000\n"
expect "one instruction per line"
expect "]"
send "addi x2, x0, 5\n"
expect "]"
send "mv x3, x0\n"
expect "]"
send "loop:\n"
expect "]"
send "addi x3, x3, 1\n"
expect "]"
send "bne x3, x2, loop\n"
expect "]"
send "jr ra\n"
expect "]"
send "nop\n"
expect "]"
send "\n"

expect ">>"
send "G\n"
send "80100000\n"
expect "elapsed time" {} timeout {exit 1}

expect ">>"
send "R\n"
expect -re "R2.+00000005"  {} timeout {exit 1}

# TLB required
#expect ">>"
#send "G\n"
#send "0\n"
#expect "elapsed time" {} timeout {exit 1}

#expect ">>"
#send "T\n"
#send " -1\n"
#expect -re "00000_000 +00100_000 +0 +1 +1 +1"  {} timeout {exit 1}

#expect ">>"
#send "D\n"
#send "0\n"
#send "16\n"
#expect -re "0x00000000: +0x24020001" {} timeout {exit 1}

expect ">>"
send "Q\n"
